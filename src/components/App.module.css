.app {
  height: 100vh;
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: max-content 1fr 1fr;
  grid-template-areas:
    "controls"
    "unsorted"
    "sorted";
}

.controls {
  grid-area: controls;
  background: var(--bg1);

  display: flex;
  flex-direction: column;
  justify-content: space-between;
  padding: 1rem;
  gap: 1rem;
}

.unsorted {
  grid-area: unsorted;
}

.sorted {
  grid-area: sorted;
}

.unsorted, .sorted {
  display: flex;
  flex-direction: column;
  overflow-y: auto;
  padding: 1rem;
}

:is(.unsorted, .sorted) > h2 {
  text-align: center;
  margin: 0 0 1rem;
}

:is(.unsorted, .sorted) > div {
  flex: 1 1;
  gap: 1rem;
  overflow-y: auto;
}

.unsorted > div {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(30ch, 1fr));
  align-content: start;
}

.sorted > div {
  display: flex;
  flex-direction: column;
}

@media (min-width: 80ch) {
  .app {
    grid-template-columns: 1fr 1fr;
    grid-template-rows: max-content 1fr;
    grid-template-areas:
      "controls controls"
      "unsorted sorted"
  }

  .unsorted {
    border-right: 1px dotted var(--bg3);
  }

  .sorted {
    border-left: 1px dotted var(--bg3);
  }
}

@media (min-width: 120ch) {
  .app {
    grid-template-columns: max-content 1fr minmax(min-content, 40ch);
    grid-template-rows: 1fr;
    grid-template-areas: "controls unsorted sorted"
  }
}
